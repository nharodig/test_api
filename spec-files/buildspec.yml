version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - docker login  --username  $DOCKERHUB_USER --password  $DOCKERHUB_PASSWORD
      - cd app
      - printenv >> ./docker/.env

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - export COMMIT_ID=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)
      - docker build -f ./docker/Dockerfile -t "${BUILD_REPOSITORY_NAME}":"prerelease.${PIPELINE_TYPE}.${COMMIT_ID}" .
      - sleep 5s
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $BUILD_REPOSITORY_URL
      - docker images
      - docker tag "${BUILD_REPOSITORY_NAME}":"prerelease.${PIPELINE_TYPE}.${COMMIT_ID}" "${BUILD_REPOSITORY_URL}"/"${BUILD_REPOSITORY_NAME}":"prerelease.${PIPELINE_TYPE}.${COMMIT_ID}"
      - docker images
      - docker push "${BUILD_REPOSITORY_URL}"/"${BUILD_REPOSITORY_NAME}":"prerelease.${PIPELINE_TYPE}.${COMMIT_ID}"

  post_build:
    commands:
      - echo Writing image definitions file...
      - cd ..
      - printf '[{"name":"%s","imageUri":"%s"}]' $BUILD_REPOSITORY_NAME $BUILD_REPOSITORY_URL/$BUILD_REPOSITORY_NAME:"prerelease.${PIPELINE_TYPE}.${COMMIT_ID}" > buildimagedefinitions.json

artifacts:
  files:
    - buildimagedefinitions.json
